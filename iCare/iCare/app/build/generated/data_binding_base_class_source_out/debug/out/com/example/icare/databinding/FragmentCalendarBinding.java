// Generated by view binder compiler. Do not edit!
package com.example.icare.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.icare.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCalendarBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton addAppointmentBtn;

  @NonNull
  public final TextView appointmentLabel;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final RelativeLayout titleBarLayout;

  private FragmentCalendarBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageButton addAppointmentBtn, @NonNull TextView appointmentLabel,
      @NonNull RecyclerView recyclerView, @NonNull RelativeLayout titleBarLayout) {
    this.rootView = rootView;
    this.addAppointmentBtn = addAppointmentBtn;
    this.appointmentLabel = appointmentLabel;
    this.recyclerView = recyclerView;
    this.titleBarLayout = titleBarLayout;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCalendarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCalendarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_calendar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCalendarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_appointment_btn;
      ImageButton addAppointmentBtn = ViewBindings.findChildViewById(rootView, id);
      if (addAppointmentBtn == null) {
        break missingId;
      }

      id = R.id.appointment_label;
      TextView appointmentLabel = ViewBindings.findChildViewById(rootView, id);
      if (appointmentLabel == null) {
        break missingId;
      }

      id = R.id.recycler_view;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.title_bar_layout;
      RelativeLayout titleBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (titleBarLayout == null) {
        break missingId;
      }

      return new FragmentCalendarBinding((RelativeLayout) rootView, addAppointmentBtn,
          appointmentLabel, recyclerView, titleBarLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
