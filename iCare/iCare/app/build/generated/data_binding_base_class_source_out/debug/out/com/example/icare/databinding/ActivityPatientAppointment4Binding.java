// Generated by view binder compiler. Do not edit!
package com.example.icare.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.icare.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPatientAppointment4Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout appointmentCompleted;

  @NonNull
  public final TextView drName;

  @NonNull
  public final ImageView drPicture;

  @NonNull
  public final TextView iCareText;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView patientAppointmentDate;

  @NonNull
  public final TextView statusLabel;

  private ActivityPatientAppointment4Binding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout appointmentCompleted, @NonNull TextView drName,
      @NonNull ImageView drPicture, @NonNull TextView iCareText, @NonNull ImageView imageView,
      @NonNull TextView patientAppointmentDate, @NonNull TextView statusLabel) {
    this.rootView = rootView;
    this.appointmentCompleted = appointmentCompleted;
    this.drName = drName;
    this.drPicture = drPicture;
    this.iCareText = iCareText;
    this.imageView = imageView;
    this.patientAppointmentDate = patientAppointmentDate;
    this.statusLabel = statusLabel;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPatientAppointment4Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPatientAppointment4Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_patient_appointment4, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPatientAppointment4Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appointment_completed;
      LinearLayout appointmentCompleted = ViewBindings.findChildViewById(rootView, id);
      if (appointmentCompleted == null) {
        break missingId;
      }

      id = R.id.dr_name;
      TextView drName = ViewBindings.findChildViewById(rootView, id);
      if (drName == null) {
        break missingId;
      }

      id = R.id.dr_picture;
      ImageView drPicture = ViewBindings.findChildViewById(rootView, id);
      if (drPicture == null) {
        break missingId;
      }

      id = R.id.iCare_Text;
      TextView iCareText = ViewBindings.findChildViewById(rootView, id);
      if (iCareText == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.patient_appointment_date;
      TextView patientAppointmentDate = ViewBindings.findChildViewById(rootView, id);
      if (patientAppointmentDate == null) {
        break missingId;
      }

      id = R.id.status_label;
      TextView statusLabel = ViewBindings.findChildViewById(rootView, id);
      if (statusLabel == null) {
        break missingId;
      }

      return new ActivityPatientAppointment4Binding((ConstraintLayout) rootView,
          appointmentCompleted, drName, drPicture, iCareText, imageView, patientAppointmentDate,
          statusLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
