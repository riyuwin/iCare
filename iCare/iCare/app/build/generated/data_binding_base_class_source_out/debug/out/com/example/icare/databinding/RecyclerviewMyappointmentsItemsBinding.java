// Generated by view binder compiler. Do not edit!
package com.example.icare.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.icare.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecyclerviewMyappointmentsItemsBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView appointmentDate;

  @NonNull
  public final TextView appointmentTime;

  @NonNull
  public final TextView fullnameTv;

  @NonNull
  public final TextView identity;

  @NonNull
  public final CardView myAppointmentCd;

  private RecyclerviewMyappointmentsItemsBinding(@NonNull CardView rootView,
      @NonNull TextView appointmentDate, @NonNull TextView appointmentTime,
      @NonNull TextView fullnameTv, @NonNull TextView identity, @NonNull CardView myAppointmentCd) {
    this.rootView = rootView;
    this.appointmentDate = appointmentDate;
    this.appointmentTime = appointmentTime;
    this.fullnameTv = fullnameTv;
    this.identity = identity;
    this.myAppointmentCd = myAppointmentCd;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclerviewMyappointmentsItemsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclerviewMyappointmentsItemsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recyclerview_myappointments_items, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclerviewMyappointmentsItemsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appointment_date;
      TextView appointmentDate = ViewBindings.findChildViewById(rootView, id);
      if (appointmentDate == null) {
        break missingId;
      }

      id = R.id.appointment_time;
      TextView appointmentTime = ViewBindings.findChildViewById(rootView, id);
      if (appointmentTime == null) {
        break missingId;
      }

      id = R.id.fullname_tv;
      TextView fullnameTv = ViewBindings.findChildViewById(rootView, id);
      if (fullnameTv == null) {
        break missingId;
      }

      id = R.id.identity;
      TextView identity = ViewBindings.findChildViewById(rootView, id);
      if (identity == null) {
        break missingId;
      }

      CardView myAppointmentCd = (CardView) rootView;

      return new RecyclerviewMyappointmentsItemsBinding((CardView) rootView, appointmentDate,
          appointmentTime, fullnameTv, identity, myAppointmentCd);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
